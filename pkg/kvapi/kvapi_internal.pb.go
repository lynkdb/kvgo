// Copyright 2015 Eryx <evorui at gmail dot com>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: kvapi_internal.proto

package kvapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Version uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	Attrs   uint64 `protobuf:"varint,3,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"`
	Expired int64  `protobuf:"varint,4,opt,name=expired,proto3" json:"expired,omitempty" toml:"expired,omitempty"`
	Created int64  `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty" toml:"created,omitempty"`
	Size    int32  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty" toml:"size,omitempty"`
	Key     []byte `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty"`
}

func (x *LogMeta) Reset() {
	*x = LogMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMeta) ProtoMessage() {}

func (x *LogMeta) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMeta.ProtoReflect.Descriptor instead.
func (*LogMeta) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{0}
}

func (x *LogMeta) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogMeta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *LogMeta) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *LogMeta) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

func (x *LogMeta) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *LogMeta) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LogMeta) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type RawKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty"`
}

func (x *RawKeyValue) Reset() {
	*x = RawKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawKeyValue) ProtoMessage() {}

func (x *RawKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawKeyValue.ProtoReflect.Descriptor instead.
func (*RawKeyValue) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{1}
}

func (x *RawKeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *RawKeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type DatabaseMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Version uint64               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	Shards  []*DatabaseMap_Shard `protobuf:"bytes,9,rep,name=shards,proto3" json:"shards,omitempty" toml:"shards,omitempty"`
	IncrId  uint64               `protobuf:"varint,13,opt,name=incr_id,json=incrId,proto3" json:"incr_id,omitempty" toml:"incr_id,omitempty"`
	Updated int64                `protobuf:"varint,15,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
}

func (x *DatabaseMap) Reset() {
	*x = DatabaseMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseMap) ProtoMessage() {}

func (x *DatabaseMap) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseMap.ProtoReflect.Descriptor instead.
func (*DatabaseMap) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{2}
}

func (x *DatabaseMap) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DatabaseMap) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DatabaseMap) GetShards() []*DatabaseMap_Shard {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *DatabaseMap) GetIncrId() uint64 {
	if x != nil {
		return x.IncrId
	}
	return 0
}

func (x *DatabaseMap) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type DatabaseMapStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replicas map[uint64]*DatabaseMapStatus_Replica `protobuf:"bytes,9,rep,name=replicas,proto3" json:"replicas,omitempty" toml:"replicas,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DatabaseMapStatus) Reset() {
	*x = DatabaseMapStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseMapStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseMapStatus) ProtoMessage() {}

func (x *DatabaseMapStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseMapStatus.ProtoReflect.Descriptor instead.
func (*DatabaseMapStatus) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{3}
}

func (x *DatabaseMapStatus) GetReplicas() map[uint64]*DatabaseMapStatus_Replica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type SysNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
}

func (x *SysNode) Reset() {
	*x = SysNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysNode) ProtoMessage() {}

func (x *SysNode) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysNode.ProtoReflect.Descriptor instead.
func (*SysNode) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{4}
}

func (x *SysNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SysStoreStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	UniId          string `protobuf:"bytes,2,opt,name=uni_id,json=uniId,proto3" json:"uni_id,omitempty" toml:"uni_id,omitempty"`
	CapacityUsed   uint64 `protobuf:"varint,8,opt,name=capacity_used,json=capacityUsed,proto3" json:"capacity_used,omitempty" toml:"capacity_used,omitempty"`
	CapacityFree   uint64 `protobuf:"varint,9,opt,name=capacity_free,json=capacityFree,proto3" json:"capacity_free,omitempty" toml:"capacity_free,omitempty"`
	LoadCycleCount uint64 `protobuf:"varint,10,opt,name=load_cycle_count,json=loadCycleCount,proto3" json:"load_cycle_count,omitempty" toml:"load_cycle_count,omitempty"`
	Updated        uint64 `protobuf:"varint,15,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
}

func (x *SysStoreStatus) Reset() {
	*x = SysStoreStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysStoreStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysStoreStatus) ProtoMessage() {}

func (x *SysStoreStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysStoreStatus.ProtoReflect.Descriptor instead.
func (*SysStoreStatus) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{5}
}

func (x *SysStoreStatus) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysStoreStatus) GetUniId() string {
	if x != nil {
		return x.UniId
	}
	return ""
}

func (x *SysStoreStatus) GetCapacityUsed() uint64 {
	if x != nil {
		return x.CapacityUsed
	}
	return 0
}

func (x *SysStoreStatus) GetCapacityFree() uint64 {
	if x != nil {
		return x.CapacityFree
	}
	return 0
}

func (x *SysStoreStatus) GetLoadCycleCount() uint64 {
	if x != nil {
		return x.LoadCycleCount
	}
	return 0
}

func (x *SysStoreStatus) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type SysStoreDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	UniId   string `protobuf:"bytes,2,opt,name=uni_id,json=uniId,proto3" json:"uni_id,omitempty" toml:"uni_id,omitempty"`
	NodeId  uint64 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty" toml:"node_id,omitempty"`
	Created int64  `protobuf:"varint,14,opt,name=created,proto3" json:"created,omitempty" toml:"created,omitempty"`
}

func (x *SysStoreDescriptor) Reset() {
	*x = SysStoreDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysStoreDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysStoreDescriptor) ProtoMessage() {}

func (x *SysStoreDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysStoreDescriptor.ProtoReflect.Descriptor instead.
func (*SysStoreDescriptor) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{6}
}

func (x *SysStoreDescriptor) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysStoreDescriptor) GetUniId() string {
	if x != nil {
		return x.UniId
	}
	return ""
}

func (x *SysStoreDescriptor) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SysStoreDescriptor) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type WriteProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Write *WriteRequest `protobuf:"bytes,2,opt,name=write,proto3" json:"write,omitempty" toml:"write,omitempty"` // uint64 expired = 3;
}

func (x *WriteProposalRequest) Reset() {
	*x = WriteProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteProposalRequest) ProtoMessage() {}

func (x *WriteProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteProposalRequest.ProtoReflect.Descriptor instead.
func (*WriteProposalRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{7}
}

func (x *WriteProposalRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WriteProposalRequest) GetWrite() *WriteRequest {
	if x != nil {
		return x.Write
	}
	return nil
}

type DeleteProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Key   []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty"`
	Meta  *Meta  `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	Attrs uint64 `protobuf:"varint,4,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"` // uint64 expired = 4;
}

func (x *DeleteProposalRequest) Reset() {
	*x = DeleteProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProposalRequest) ProtoMessage() {}

func (x *DeleteProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProposalRequest.ProtoReflect.Descriptor instead.
func (*DeleteProposalRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteProposalRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteProposalRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteProposalRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DeleteProposalRequest) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type LogRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbId      string `protobuf:"bytes,1,opt,name=db_id,json=dbId,proto3" json:"db_id,omitempty" toml:"db_id,omitempty"`
	ShardId   uint64 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty" toml:"shard_id,omitempty"`
	ReplicaId uint64 `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty" toml:"replica_id,omitempty"`
	LowerLog  uint64 `protobuf:"varint,4,opt,name=lower_log,json=lowerLog,proto3" json:"lower_log,omitempty" toml:"lower_log,omitempty"`
	UpperLog  uint64 `protobuf:"varint,5,opt,name=upper_log,json=upperLog,proto3" json:"upper_log,omitempty" toml:"upper_log,omitempty"`
}

func (x *LogRangeRequest) Reset() {
	*x = LogRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRangeRequest) ProtoMessage() {}

func (x *LogRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRangeRequest.ProtoReflect.Descriptor instead.
func (*LogRangeRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{9}
}

func (x *LogRangeRequest) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

func (x *LogRangeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *LogRangeRequest) GetReplicaId() uint64 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *LogRangeRequest) GetLowerLog() uint64 {
	if x != nil {
		return x.LowerLog
	}
	return 0
}

func (x *LogRangeRequest) GetUpperLog() uint64 {
	if x != nil {
		return x.UpperLog
	}
	return 0
}

type LogRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 log_left = 7;
	LogOffset         uint64     `protobuf:"varint,8,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty" toml:"log_offset,omitempty"`
	Items             []*LogMeta `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
	NextResultSet     bool       `protobuf:"varint,10,opt,name=next_result_set,json=nextResultSet,proto3" json:"next_result_set,omitempty" toml:"next_result_set,omitempty"`
	LogOffsetOutrange bool       `protobuf:"varint,11,opt,name=log_offset_outrange,json=logOffsetOutrange,proto3" json:"log_offset_outrange,omitempty" toml:"log_offset_outrange,omitempty"`
}

func (x *LogRangeResponse) Reset() {
	*x = LogRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRangeResponse) ProtoMessage() {}

func (x *LogRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRangeResponse.ProtoReflect.Descriptor instead.
func (*LogRangeResponse) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{10}
}

func (x *LogRangeResponse) GetLogOffset() uint64 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

func (x *LogRangeResponse) GetItems() []*LogMeta {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LogRangeResponse) GetNextResultSet() bool {
	if x != nil {
		return x.NextResultSet
	}
	return false
}

func (x *LogRangeResponse) GetLogOffsetOutrange() bool {
	if x != nil {
		return x.LogOffsetOutrange
	}
	return false
}

type LogKeyRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbId      string `protobuf:"bytes,1,opt,name=db_id,json=dbId,proto3" json:"db_id,omitempty" toml:"db_id,omitempty"`
	ShardId   uint64 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty" toml:"shard_id,omitempty"`
	ReplicaId uint64 `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty" toml:"replica_id,omitempty"`
	LowerKey  []byte `protobuf:"bytes,4,opt,name=lower_key,json=lowerKey,proto3" json:"lower_key,omitempty" toml:"lower_key,omitempty"`
	UpperKey  []byte `protobuf:"bytes,5,opt,name=upper_key,json=upperKey,proto3" json:"upper_key,omitempty" toml:"upper_key,omitempty"`
}

func (x *LogKeyRangeRequest) Reset() {
	*x = LogKeyRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogKeyRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogKeyRangeRequest) ProtoMessage() {}

func (x *LogKeyRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogKeyRangeRequest.ProtoReflect.Descriptor instead.
func (*LogKeyRangeRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{11}
}

func (x *LogKeyRangeRequest) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

func (x *LogKeyRangeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *LogKeyRangeRequest) GetReplicaId() uint64 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *LogKeyRangeRequest) GetLowerKey() []byte {
	if x != nil {
		return x.LowerKey
	}
	return nil
}

func (x *LogKeyRangeRequest) GetUpperKey() []byte {
	if x != nil {
		return x.UpperKey
	}
	return nil
}

type LogKeyRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         []*Meta `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
	NextResultSet bool    `protobuf:"varint,10,opt,name=next_result_set,json=nextResultSet,proto3" json:"next_result_set,omitempty" toml:"next_result_set,omitempty"`
}

func (x *LogKeyRangeResponse) Reset() {
	*x = LogKeyRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogKeyRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogKeyRangeResponse) ProtoMessage() {}

func (x *LogKeyRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogKeyRangeResponse.ProtoReflect.Descriptor instead.
func (*LogKeyRangeResponse) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{12}
}

func (x *LogKeyRangeResponse) GetItems() []*Meta {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LogKeyRangeResponse) GetNextResultSet() bool {
	if x != nil {
		return x.NextResultSet
	}
	return false
}

type AuditLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty" toml:"content,omitempty"`
	Created int64  `protobuf:"varint,14,opt,name=created,proto3" json:"created,omitempty" toml:"created,omitempty"`
}

func (x *AuditLog) Reset() {
	*x = AuditLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLog) ProtoMessage() {}

func (x *AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLog) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{13}
}

func (x *AuditLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditLog) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuditLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AuditLog) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type DatabaseMap_Replica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	StoreId uint64 `protobuf:"varint,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty" toml:"store_id,omitempty"`
	Prev    uint64 `protobuf:"varint,4,opt,name=prev,proto3" json:"prev,omitempty" toml:"prev,omitempty"`
	Action  uint64 `protobuf:"varint,7,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
}

func (x *DatabaseMap_Replica) Reset() {
	*x = DatabaseMap_Replica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseMap_Replica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseMap_Replica) ProtoMessage() {}

func (x *DatabaseMap_Replica) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseMap_Replica.ProtoReflect.Descriptor instead.
func (*DatabaseMap_Replica) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DatabaseMap_Replica) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DatabaseMap_Replica) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *DatabaseMap_Replica) GetPrev() uint64 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *DatabaseMap_Replica) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type DatabaseMap_Shard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Version  uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	Prev     uint64                 `protobuf:"varint,4,opt,name=prev,proto3" json:"prev,omitempty" toml:"prev,omitempty"`
	LowerKey []byte                 `protobuf:"bytes,5,opt,name=lower_key,json=lowerKey,proto3" json:"lower_key,omitempty" toml:"lower_key,omitempty"`
	Action   uint64                 `protobuf:"varint,7,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	Replicas []*DatabaseMap_Replica `protobuf:"bytes,9,rep,name=replicas,proto3" json:"replicas,omitempty" toml:"replicas,omitempty"`
	Updated  int64                  `protobuf:"varint,15,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
}

func (x *DatabaseMap_Shard) Reset() {
	*x = DatabaseMap_Shard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseMap_Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseMap_Shard) ProtoMessage() {}

func (x *DatabaseMap_Shard) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseMap_Shard.ProtoReflect.Descriptor instead.
func (*DatabaseMap_Shard) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{2, 1}
}

func (x *DatabaseMap_Shard) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DatabaseMap_Shard) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DatabaseMap_Shard) GetPrev() uint64 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *DatabaseMap_Shard) GetLowerKey() []byte {
	if x != nil {
		return x.LowerKey
	}
	return nil
}

func (x *DatabaseMap_Shard) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *DatabaseMap_Shard) GetReplicas() []*DatabaseMap_Replica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *DatabaseMap_Shard) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type DatabaseMapStatus_SyncPull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapVersion uint64 `protobuf:"varint,1,opt,name=map_version,json=mapVersion,proto3" json:"map_version,omitempty" toml:"map_version,omitempty"`
	Version    uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	Action     uint64 `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
}

func (x *DatabaseMapStatus_SyncPull) Reset() {
	*x = DatabaseMapStatus_SyncPull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseMapStatus_SyncPull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseMapStatus_SyncPull) ProtoMessage() {}

func (x *DatabaseMapStatus_SyncPull) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseMapStatus_SyncPull.ProtoReflect.Descriptor instead.
func (*DatabaseMapStatus_SyncPull) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DatabaseMapStatus_SyncPull) GetMapVersion() uint64 {
	if x != nil {
		return x.MapVersion
	}
	return 0
}

func (x *DatabaseMapStatus_SyncPull) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DatabaseMapStatus_SyncPull) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type DatabaseMapStatus_Replica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapVersion uint64 `protobuf:"varint,1,opt,name=map_version,json=mapVersion,proto3" json:"map_version,omitempty" toml:"map_version,omitempty"`
	Action     uint64 `protobuf:"varint,7,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	Used       int64  `protobuf:"varint,8,opt,name=used,proto3" json:"used,omitempty" toml:"used,omitempty"`
	// map<uint64, SyncPull> pulls = 9;
	Updated int64 `protobuf:"varint,15,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
}

func (x *DatabaseMapStatus_Replica) Reset() {
	*x = DatabaseMapStatus_Replica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_internal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseMapStatus_Replica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseMapStatus_Replica) ProtoMessage() {}

func (x *DatabaseMapStatus_Replica) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_internal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseMapStatus_Replica.ProtoReflect.Descriptor instead.
func (*DatabaseMapStatus_Replica) Descriptor() ([]byte, []int) {
	return file_kvapi_internal_proto_rawDescGZIP(), []int{3, 1}
}

func (x *DatabaseMapStatus_Replica) GetMapVersion() uint64 {
	if x != nil {
		return x.MapVersion
	}
	return 0
}

func (x *DatabaseMapStatus_Replica) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *DatabaseMapStatus_Replica) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DatabaseMapStatus_Replica) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

var File_kvapi_internal_proto protoreflect.FileDescriptor

var file_kvapi_internal_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b,
	0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x0b, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x0b, 0x52, 0x61,
	0x77, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xe1, 0x03, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x72, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x60, 0x0a, 0x07, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x72, 0x65, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd6, 0x01, 0x0a,
	0x05, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x72, 0x65, 0x76, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x9b, 0x03, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x08, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x1a, 0x5d, 0x0a, 0x08, 0x53, 0x79, 0x6e,
	0x63, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x70, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x67, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c,
	0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x19, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5,
	0x01, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x46, 0x72,
	0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x6e, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x6e, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e,
	0x69, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5b, 0x0a, 0x14, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33,
	0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x22, 0x7a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c,
	0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22,
	0x9a, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x75, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x22, 0xb9, 0x01, 0x0a,
	0x10, 0x4c, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x67,
	0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x6a, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x4b,
	0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x74, 0x22, 0x62, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x32, 0x0e, 0x0a, 0x0c, 0x4b, 0x76, 0x67, 0x6f,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x0c, 0x48, 0x03, 0x5a, 0x08, 0x2e, 0x2f,
	0x3b, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kvapi_internal_proto_rawDescOnce sync.Once
	file_kvapi_internal_proto_rawDescData = file_kvapi_internal_proto_rawDesc
)

func file_kvapi_internal_proto_rawDescGZIP() []byte {
	file_kvapi_internal_proto_rawDescOnce.Do(func() {
		file_kvapi_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvapi_internal_proto_rawDescData)
	})
	return file_kvapi_internal_proto_rawDescData
}

var file_kvapi_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_kvapi_internal_proto_goTypes = []interface{}{
	(*LogMeta)(nil),                    // 0: lynkdb.kvapi.v2.LogMeta
	(*RawKeyValue)(nil),                // 1: lynkdb.kvapi.v2.RawKeyValue
	(*DatabaseMap)(nil),                // 2: lynkdb.kvapi.v2.DatabaseMap
	(*DatabaseMapStatus)(nil),          // 3: lynkdb.kvapi.v2.DatabaseMapStatus
	(*SysNode)(nil),                    // 4: lynkdb.kvapi.v2.SysNode
	(*SysStoreStatus)(nil),             // 5: lynkdb.kvapi.v2.SysStoreStatus
	(*SysStoreDescriptor)(nil),         // 6: lynkdb.kvapi.v2.SysStoreDescriptor
	(*WriteProposalRequest)(nil),       // 7: lynkdb.kvapi.v2.WriteProposalRequest
	(*DeleteProposalRequest)(nil),      // 8: lynkdb.kvapi.v2.DeleteProposalRequest
	(*LogRangeRequest)(nil),            // 9: lynkdb.kvapi.v2.LogRangeRequest
	(*LogRangeResponse)(nil),           // 10: lynkdb.kvapi.v2.LogRangeResponse
	(*LogKeyRangeRequest)(nil),         // 11: lynkdb.kvapi.v2.LogKeyRangeRequest
	(*LogKeyRangeResponse)(nil),        // 12: lynkdb.kvapi.v2.LogKeyRangeResponse
	(*AuditLog)(nil),                   // 13: lynkdb.kvapi.v2.AuditLog
	(*DatabaseMap_Replica)(nil),        // 14: lynkdb.kvapi.v2.DatabaseMap.Replica
	(*DatabaseMap_Shard)(nil),          // 15: lynkdb.kvapi.v2.DatabaseMap.Shard
	(*DatabaseMapStatus_SyncPull)(nil), // 16: lynkdb.kvapi.v2.DatabaseMapStatus.SyncPull
	(*DatabaseMapStatus_Replica)(nil),  // 17: lynkdb.kvapi.v2.DatabaseMapStatus.Replica
	nil,                                // 18: lynkdb.kvapi.v2.DatabaseMapStatus.ReplicasEntry
	(*WriteRequest)(nil),               // 19: lynkdb.kvapi.v2.WriteRequest
	(*Meta)(nil),                       // 20: lynkdb.kvapi.v2.Meta
}
var file_kvapi_internal_proto_depIdxs = []int32{
	15, // 0: lynkdb.kvapi.v2.DatabaseMap.shards:type_name -> lynkdb.kvapi.v2.DatabaseMap.Shard
	18, // 1: lynkdb.kvapi.v2.DatabaseMapStatus.replicas:type_name -> lynkdb.kvapi.v2.DatabaseMapStatus.ReplicasEntry
	19, // 2: lynkdb.kvapi.v2.WriteProposalRequest.write:type_name -> lynkdb.kvapi.v2.WriteRequest
	20, // 3: lynkdb.kvapi.v2.DeleteProposalRequest.meta:type_name -> lynkdb.kvapi.v2.Meta
	0,  // 4: lynkdb.kvapi.v2.LogRangeResponse.items:type_name -> lynkdb.kvapi.v2.LogMeta
	20, // 5: lynkdb.kvapi.v2.LogKeyRangeResponse.items:type_name -> lynkdb.kvapi.v2.Meta
	14, // 6: lynkdb.kvapi.v2.DatabaseMap.Shard.replicas:type_name -> lynkdb.kvapi.v2.DatabaseMap.Replica
	17, // 7: lynkdb.kvapi.v2.DatabaseMapStatus.ReplicasEntry.value:type_name -> lynkdb.kvapi.v2.DatabaseMapStatus.Replica
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_kvapi_internal_proto_init() }
func file_kvapi_internal_proto_init() {
	if File_kvapi_internal_proto != nil {
		return
	}
	file_kvapi_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kvapi_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseMapStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysStoreStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysStoreDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogKeyRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogKeyRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseMap_Replica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseMap_Shard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseMapStatus_SyncPull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_internal_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseMapStatus_Replica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvapi_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kvapi_internal_proto_goTypes,
		DependencyIndexes: file_kvapi_internal_proto_depIdxs,
		MessageInfos:      file_kvapi_internal_proto_msgTypes,
	}.Build()
	File_kvapi_internal_proto = out.File
	file_kvapi_internal_proto_rawDesc = nil
	file_kvapi_internal_proto_goTypes = nil
	file_kvapi_internal_proto_depIdxs = nil
}
