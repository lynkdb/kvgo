// Copyright 2015 Eryx <evorui at gmail dot com>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.29.3
// source: kvapi.proto

package kvapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeyValue is a pair of Key and Value for returned Key/Value pairs
type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta  *Meta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty" yaml:"meta,omitempty"`
	Key   []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty" yaml:"key,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty" yaml:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValue) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *KeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Meta defines metadata for Key/Value pairs
type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// epoch id
	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" yaml:"version,omitempty"`
	// last update time. unix time in milliseconds.
	Updated int64 `protobuf:"varint,3,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty" yaml:"updated,omitempty"`
	// various scalable attribute tags
	Attrs uint64 `protobuf:"varint,4,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty" yaml:"attrs,omitempty"`
	// value checksum
	Checksum uint64 `protobuf:"varint,5,opt,name=checksum,proto3" json:"checksum,omitempty" toml:"checksum,omitempty" yaml:"checksum,omitempty"`
	// value size
	Size int32 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty" toml:"size,omitempty" yaml:"size,omitempty"`
	// increasing namespace:id
	IncrNs uint32 `protobuf:"varint,9,opt,name=incr_ns,json=incrNs,proto3" json:"incr_ns,omitempty" toml:"incr_ns,omitempty" yaml:"incr_ns,omitempty"`
	IncrId uint64 `protobuf:"varint,10,opt,name=incr_id,json=incrId,proto3" json:"incr_id,omitempty" toml:"incr_id,omitempty" yaml:"incr_id,omitempty"`
	// TTL time. unix time in milliseconds.
	Expired int64 `protobuf:"varint,11,opt,name=expired,proto3" json:"expired,omitempty" toml:"expired,omitempty" yaml:"expired,omitempty"`
	// user defined data field
	Extra []byte `protobuf:"bytes,16,opt,name=extra,proto3" json:"extra,omitempty" toml:"extra,omitempty" yaml:"extra,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{1}
}

func (x *Meta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Meta) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *Meta) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *Meta) GetChecksum() uint64 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *Meta) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Meta) GetIncrNs() uint32 {
	if x != nil {
		return x.IncrNs
	}
	return 0
}

func (x *Meta) GetIncrId() uint64 {
	if x != nil {
		return x.IncrId
	}
	return 0
}

func (x *Meta) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

func (x *Meta) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database      string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty" toml:"database,omitempty" yaml:"database,omitempty"`
	Key           []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty" yaml:"key,omitempty"`
	Value         []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty" yaml:"value,omitempty"`
	Meta          *Meta  `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty" yaml:"meta,omitempty"`
	Attrs         uint64 `protobuf:"varint,5,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty" yaml:"attrs,omitempty"`
	CreateOnly    bool   `protobuf:"varint,6,opt,name=create_only,json=createOnly,proto3" json:"create_only,omitempty" toml:"create_only,omitempty" yaml:"create_only,omitempty"`
	PrevVersion   uint64 `protobuf:"varint,7,opt,name=prev_version,json=prevVersion,proto3" json:"prev_version,omitempty" toml:"prev_version,omitempty" yaml:"prev_version,omitempty"`
	PrevChecksum  uint64 `protobuf:"varint,8,opt,name=prev_checksum,json=prevChecksum,proto3" json:"prev_checksum,omitempty" toml:"prev_checksum,omitempty" yaml:"prev_checksum,omitempty"`
	PrevIncrId    uint64 `protobuf:"varint,9,opt,name=prev_incr_id,json=prevIncrId,proto3" json:"prev_incr_id,omitempty" toml:"prev_incr_id,omitempty" yaml:"prev_incr_id,omitempty"`
	PrevAttrs     uint64 `protobuf:"varint,10,opt,name=prev_attrs,json=prevAttrs,proto3" json:"prev_attrs,omitempty" toml:"prev_attrs,omitempty" yaml:"prev_attrs,omitempty"`
	IncrNamespace string `protobuf:"bytes,16,opt,name=incr_namespace,json=incrNamespace,proto3" json:"incr_namespace,omitempty" toml:"incr_namespace,omitempty" yaml:"incr_namespace,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{2}
}

func (x *WriteRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *WriteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WriteRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *WriteRequest) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *WriteRequest) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *WriteRequest) GetCreateOnly() bool {
	if x != nil {
		return x.CreateOnly
	}
	return false
}

func (x *WriteRequest) GetPrevVersion() uint64 {
	if x != nil {
		return x.PrevVersion
	}
	return 0
}

func (x *WriteRequest) GetPrevChecksum() uint64 {
	if x != nil {
		return x.PrevChecksum
	}
	return 0
}

func (x *WriteRequest) GetPrevIncrId() uint64 {
	if x != nil {
		return x.PrevIncrId
	}
	return 0
}

func (x *WriteRequest) GetPrevAttrs() uint64 {
	if x != nil {
		return x.PrevAttrs
	}
	return 0
}

func (x *WriteRequest) GetIncrNamespace() string {
	if x != nil {
		return x.IncrNamespace
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database     string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty" toml:"database,omitempty" yaml:"database,omitempty"`
	Key          []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty" yaml:"key,omitempty"`
	Attrs        uint64 `protobuf:"varint,5,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty" yaml:"attrs,omitempty"`
	PrevVersion  uint64 `protobuf:"varint,7,opt,name=prev_version,json=prevVersion,proto3" json:"prev_version,omitempty" toml:"prev_version,omitempty" yaml:"prev_version,omitempty"`
	PrevChecksum uint64 `protobuf:"varint,8,opt,name=prev_checksum,json=prevChecksum,proto3" json:"prev_checksum,omitempty" toml:"prev_checksum,omitempty" yaml:"prev_checksum,omitempty"`
	PrevAttrs    uint64 `protobuf:"varint,10,opt,name=prev_attrs,json=prevAttrs,proto3" json:"prev_attrs,omitempty" toml:"prev_attrs,omitempty" yaml:"prev_attrs,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteRequest) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *DeleteRequest) GetPrevVersion() uint64 {
	if x != nil {
		return x.PrevVersion
	}
	return 0
}

func (x *DeleteRequest) GetPrevChecksum() uint64 {
	if x != nil {
		return x.PrevChecksum
	}
	return 0
}

func (x *DeleteRequest) GetPrevAttrs() uint64 {
	if x != nil {
		return x.PrevAttrs
	}
	return 0
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty" toml:"database,omitempty" yaml:"database,omitempty"`
	Keys     [][]byte `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty" toml:"keys,omitempty" yaml:"keys,omitempty"`
	Attrs    uint64   `protobuf:"varint,5,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty" yaml:"attrs,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{4}
}

func (x *ReadRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ReadRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ReadRequest) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type RangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty" toml:"database,omitempty" yaml:"database,omitempty"`
	LowerKey []byte `protobuf:"bytes,2,opt,name=lower_key,json=lowerKey,proto3" json:"lower_key,omitempty" toml:"lower_key,omitempty" yaml:"lower_key,omitempty"`
	UpperKey []byte `protobuf:"bytes,3,opt,name=upper_key,json=upperKey,proto3" json:"upper_key,omitempty" toml:"upper_key,omitempty" yaml:"upper_key,omitempty"`
	Attrs    uint64 `protobuf:"varint,5,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty" yaml:"attrs,omitempty"`
	Limit    int64  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty" toml:"limit,omitempty" yaml:"limit,omitempty"`
	Revert   bool   `protobuf:"varint,9,opt,name=revert,proto3" json:"revert,omitempty" toml:"revert,omitempty" yaml:"revert,omitempty"`
}

func (x *RangeRequest) Reset() {
	*x = RangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeRequest) ProtoMessage() {}

func (x *RangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeRequest.ProtoReflect.Descriptor instead.
func (*RangeRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{5}
}

func (x *RangeRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RangeRequest) GetLowerKey() []byte {
	if x != nil {
		return x.LowerKey
	}
	return nil
}

func (x *RangeRequest) GetUpperKey() []byte {
	if x != nil {
		return x.UpperKey
	}
	return nil
}

func (x *RangeRequest) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *RangeRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RangeRequest) GetRevert() bool {
	if x != nil {
		return x.Revert
	}
	return false
}

type RequestUnion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*RequestUnion_Write
	//	*RequestUnion_Delete
	//	*RequestUnion_Read
	//	*RequestUnion_Range
	Value isRequestUnion_Value `protobuf_oneof:"value" json:"value" toml:"value" yaml:"value"`
}

func (x *RequestUnion) Reset() {
	*x = RequestUnion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUnion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUnion) ProtoMessage() {}

func (x *RequestUnion) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUnion.ProtoReflect.Descriptor instead.
func (*RequestUnion) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{6}
}

func (m *RequestUnion) GetValue() isRequestUnion_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *RequestUnion) GetWrite() *WriteRequest {
	if x, ok := x.GetValue().(*RequestUnion_Write); ok {
		return x.Write
	}
	return nil
}

func (x *RequestUnion) GetDelete() *DeleteRequest {
	if x, ok := x.GetValue().(*RequestUnion_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *RequestUnion) GetRead() *ReadRequest {
	if x, ok := x.GetValue().(*RequestUnion_Read); ok {
		return x.Read
	}
	return nil
}

func (x *RequestUnion) GetRange() *RangeRequest {
	if x, ok := x.GetValue().(*RequestUnion_Range); ok {
		return x.Range
	}
	return nil
}

type isRequestUnion_Value interface {
	isRequestUnion_Value()
}

type RequestUnion_Write struct {
	Write *WriteRequest `protobuf:"bytes,1,opt,name=write,proto3,oneof" json:"write" toml:"write" yaml:"write"`
}

type RequestUnion_Delete struct {
	Delete *DeleteRequest `protobuf:"bytes,2,opt,name=delete,proto3,oneof" json:"delete" toml:"delete" yaml:"delete"`
}

type RequestUnion_Read struct {
	Read *ReadRequest `protobuf:"bytes,3,opt,name=read,proto3,oneof" json:"read" toml:"read" yaml:"read"`
}

type RequestUnion_Range struct {
	Range *RangeRequest `protobuf:"bytes,4,opt,name=range,proto3,oneof" json:"range" toml:"range" yaml:"range"`
}

func (*RequestUnion_Write) isRequestUnion_Value() {}

func (*RequestUnion_Delete) isRequestUnion_Value() {}

func (*RequestUnion_Read) isRequestUnion_Value() {}

func (*RequestUnion_Range) isRequestUnion_Value() {}

type BatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty" toml:"database,omitempty" yaml:"database,omitempty"`
	Items    []*RequestUnion `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty" yaml:"items,omitempty"`
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{7}
}

func (x *BatchRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchRequest) GetItems() []*RequestUnion {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    uint32       `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty" toml:"status_code,omitempty" yaml:"status_code,omitempty"`
	StatusMessage string       `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty" toml:"status_message,omitempty" yaml:"status_message,omitempty"`
	Items         []*ResultSet `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty" yaml:"items,omitempty" x_attrs:"rows"`
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{8}
}

func (x *BatchResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BatchResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *BatchResponse) GetItems() []*ResultSet {
	if x != nil {
		return x.Items
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" toml:"code,omitempty" yaml:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" toml:"message,omitempty" yaml:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{9}
}

func (x *Status) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResultSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    uint32      `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty" toml:"status_code,omitempty" yaml:"status_code,omitempty"`
	StatusMessage string      `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty" toml:"status_message,omitempty" yaml:"status_message,omitempty"`
	Items         []*KeyValue `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty" yaml:"items,omitempty" x_attrs:"rows"`
	MaxVersion    uint64      `protobuf:"varint,10,opt,name=max_version,json=maxVersion,proto3" json:"max_version,omitempty" toml:"max_version,omitempty" yaml:"max_version,omitempty"`
	NextKeys      [][]byte    `protobuf:"bytes,16,rep,name=next_keys,json=nextKeys,proto3" json:"next_keys,omitempty" toml:"next_keys,omitempty" yaml:"next_keys,omitempty"`
	NextResultSet bool        `protobuf:"varint,17,opt,name=next_result_set,json=nextResultSet,proto3" json:"next_result_set,omitempty" toml:"next_result_set,omitempty" yaml:"next_result_set,omitempty"`
	NextToken     string      `protobuf:"bytes,18,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty" toml:"next_token,omitempty" yaml:"next_token,omitempty"`
}

func (x *ResultSet) Reset() {
	*x = ResultSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSet) ProtoMessage() {}

func (x *ResultSet) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSet.ProtoReflect.Descriptor instead.
func (*ResultSet) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{10}
}

func (x *ResultSet) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ResultSet) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *ResultSet) GetItems() []*KeyValue {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResultSet) GetMaxVersion() uint64 {
	if x != nil {
		return x.MaxVersion
	}
	return 0
}

func (x *ResultSet) GetNextKeys() [][]byte {
	if x != nil {
		return x.NextKeys
	}
	return nil
}

func (x *ResultSet) GetNextResultSet() bool {
	if x != nil {
		return x.NextResultSet
	}
	return false
}

func (x *ResultSet) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

// message DatabaseDescriptor {
type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" yaml:"id,omitempty" x_attrs:"primary_key"`
	Name       string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	Engine     string              `protobuf:"bytes,3,opt,name=engine,proto3" json:"engine,omitempty" toml:"engine,omitempty" yaml:"engine,omitempty"`
	ReplicaNum uint32              `protobuf:"varint,4,opt,name=replica_num,json=replicaNum,proto3" json:"replica_num,omitempty" toml:"replica_num,omitempty" yaml:"replica_num,omitempty"`
	Desc       string              `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty" toml:"desc,omitempty" yaml:"desc,omitempty"`
	ShardSize  int64               `protobuf:"varint,6,opt,name=shard_size,json=shardSize,proto3" json:"shard_size,omitempty" toml:"shard_size,omitempty" yaml:"shard_size,omitempty"` // unit in MiB
	KeyStats   []*Database_KeyStat `protobuf:"bytes,16,rep,name=key_stats,json=keyStats,proto3" json:"key_stats,omitempty" toml:"key_stats,omitempty" yaml:"key_stats,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{11}
}

func (x *Database) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Database) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Database) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *Database) GetReplicaNum() uint32 {
	if x != nil {
		return x.ReplicaNum
	}
	return 0
}

func (x *Database) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Database) GetShardSize() int64 {
	if x != nil {
		return x.ShardSize
	}
	return 0
}

func (x *Database) GetKeyStats() []*Database_KeyStat {
	if x != nil {
		return x.KeyStats
	}
	return nil
}

type DatabaseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DatabaseListRequest) Reset() {
	*x = DatabaseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseListRequest) ProtoMessage() {}

func (x *DatabaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseListRequest.ProtoReflect.Descriptor instead.
func (*DatabaseListRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{12}
}

type DatabaseCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty" x_attrs:"create_required"`
	Engine     string            `protobuf:"bytes,3,opt,name=engine,proto3" json:"engine,omitempty" toml:"engine,omitempty" yaml:"engine,omitempty" x_value_limits:"v2" x_enums:"v2"`
	ReplicaNum uint32            `protobuf:"varint,4,opt,name=replica_num,json=replicaNum,proto3" json:"replica_num,omitempty" toml:"replica_num,omitempty" yaml:"replica_num,omitempty" x_value_limits:"1,1,5"`
	Desc       string            `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty" toml:"desc,omitempty" yaml:"desc,omitempty"`
	ShardSize  int64             `protobuf:"varint,6,opt,name=shard_size,json=shardSize,proto3" json:"shard_size,omitempty" toml:"shard_size,omitempty" yaml:"shard_size,omitempty" x_value_limits:"64,8192,524288"`    // unit in MiB
	Options    map[string]string `protobuf:"bytes,9,rep,name=options,proto3" json:"options,omitempty" toml:"options,omitempty" yaml:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DatabaseCreateRequest) Reset() {
	*x = DatabaseCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseCreateRequest) ProtoMessage() {}

func (x *DatabaseCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseCreateRequest.ProtoReflect.Descriptor instead.
func (*DatabaseCreateRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{13}
}

func (x *DatabaseCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseCreateRequest) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *DatabaseCreateRequest) GetReplicaNum() uint32 {
	if x != nil {
		return x.ReplicaNum
	}
	return 0
}

func (x *DatabaseCreateRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DatabaseCreateRequest) GetShardSize() int64 {
	if x != nil {
		return x.ShardSize
	}
	return 0
}

func (x *DatabaseCreateRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type DatabaseUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty" x_attrs:"update_required"`
	Engine     string `protobuf:"bytes,3,opt,name=engine,proto3" json:"engine,omitempty" toml:"engine,omitempty" yaml:"engine,omitempty" x_value_limits:"v2" x_enums:"v2"`
	ReplicaNum uint32 `protobuf:"varint,4,opt,name=replica_num,json=replicaNum,proto3" json:"replica_num,omitempty" toml:"replica_num,omitempty" yaml:"replica_num,omitempty" x_value_limits:"1,1,5"`
	Desc       string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty" toml:"desc,omitempty" yaml:"desc,omitempty"`
	ShardSize  int64  `protobuf:"varint,6,opt,name=shard_size,json=shardSize,proto3" json:"shard_size,omitempty" toml:"shard_size,omitempty" yaml:"shard_size,omitempty" x_value_limits:"64,8192,524288"`    // unit in MiB
}

func (x *DatabaseUpdateRequest) Reset() {
	*x = DatabaseUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseUpdateRequest) ProtoMessage() {}

func (x *DatabaseUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseUpdateRequest.ProtoReflect.Descriptor instead.
func (*DatabaseUpdateRequest) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{14}
}

func (x *DatabaseUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetReplicaNum() uint32 {
	if x != nil {
		return x.ReplicaNum
	}
	return 0
}

func (x *DatabaseUpdateRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetShardSize() int64 {
	if x != nil {
		return x.ShardSize
	}
	return 0
}

type DatabaseListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Database `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty" yaml:"items,omitempty" x_attrs:"rows"`
}

func (x *DatabaseListResponse) Reset() {
	*x = DatabaseListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseListResponse) ProtoMessage() {}

func (x *DatabaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseListResponse.ProtoReflect.Descriptor instead.
func (*DatabaseListResponse) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{15}
}

func (x *DatabaseListResponse) GetItems() []*Database {
	if x != nil {
		return x.Items
	}
	return nil
}

type Database_KeyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty" yaml:"key,omitempty"`
}

func (x *Database_KeyStat) Reset() {
	*x = Database_KeyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database_KeyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database_KeyStat) ProtoMessage() {}

func (x *Database_KeyStat) ProtoReflect() protoreflect.Message {
	mi := &file_kvapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database_KeyStat.ProtoReflect.Descriptor instead.
func (*Database_KeyStat) Descriptor() ([]byte, []int) {
	return file_kvapi_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Database_KeyStat) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

var File_kvapi_proto protoreflect.FileDescriptor

var file_kvapi_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6c,
	0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x22, 0x5d,
	0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64,
	0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe2, 0x01,
	0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x72, 0x5f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x72, 0x4e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x63,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0xe4, 0x02, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b,
	0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x49, 0x6e, 0x63,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x76, 0x41, 0x74, 0x74, 0x72, 0x73, 0x22, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0c,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75, 0x70, 0x70, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x22, 0xf3, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x0c,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62,
	0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x89, 0x01,
	0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53,
	0x65, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x36, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x89, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d,
	0x61, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x65,
	0x78, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf7, 0x01,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x1b, 0x0a, 0x07, 0x4b, 0x65,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa2,
	0x02, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x79, 0x6e, 0x6b,
	0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x47, 0x0a,
	0x14, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xe8, 0x02, 0x0a, 0x04, 0x4b, 0x76, 0x67, 0x6f, 0x12,
	0x44, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64,
	0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62,
	0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b,
	0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6c, 0x79, 0x6e,
	0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x79, 0x6e, 0x6b,
	0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x65, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0c, 0x48, 0x03, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x6b, 0x76, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kvapi_proto_rawDescOnce sync.Once
	file_kvapi_proto_rawDescData = file_kvapi_proto_rawDesc
)

func file_kvapi_proto_rawDescGZIP() []byte {
	file_kvapi_proto_rawDescOnce.Do(func() {
		file_kvapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvapi_proto_rawDescData)
	})
	return file_kvapi_proto_rawDescData
}

var file_kvapi_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_kvapi_proto_goTypes = []interface{}{
	(*KeyValue)(nil),              // 0: lynkdb.kvapi.v2.KeyValue
	(*Meta)(nil),                  // 1: lynkdb.kvapi.v2.Meta
	(*WriteRequest)(nil),          // 2: lynkdb.kvapi.v2.WriteRequest
	(*DeleteRequest)(nil),         // 3: lynkdb.kvapi.v2.DeleteRequest
	(*ReadRequest)(nil),           // 4: lynkdb.kvapi.v2.ReadRequest
	(*RangeRequest)(nil),          // 5: lynkdb.kvapi.v2.RangeRequest
	(*RequestUnion)(nil),          // 6: lynkdb.kvapi.v2.RequestUnion
	(*BatchRequest)(nil),          // 7: lynkdb.kvapi.v2.BatchRequest
	(*BatchResponse)(nil),         // 8: lynkdb.kvapi.v2.BatchResponse
	(*Status)(nil),                // 9: lynkdb.kvapi.v2.Status
	(*ResultSet)(nil),             // 10: lynkdb.kvapi.v2.ResultSet
	(*Database)(nil),              // 11: lynkdb.kvapi.v2.Database
	(*DatabaseListRequest)(nil),   // 12: lynkdb.kvapi.v2.DatabaseListRequest
	(*DatabaseCreateRequest)(nil), // 13: lynkdb.kvapi.v2.DatabaseCreateRequest
	(*DatabaseUpdateRequest)(nil), // 14: lynkdb.kvapi.v2.DatabaseUpdateRequest
	(*DatabaseListResponse)(nil),  // 15: lynkdb.kvapi.v2.DatabaseListResponse
	(*Database_KeyStat)(nil),      // 16: lynkdb.kvapi.v2.Database.KeyStat
	nil,                           // 17: lynkdb.kvapi.v2.DatabaseCreateRequest.OptionsEntry
}
var file_kvapi_proto_depIdxs = []int32{
	1,  // 0: lynkdb.kvapi.v2.KeyValue.meta:type_name -> lynkdb.kvapi.v2.Meta
	1,  // 1: lynkdb.kvapi.v2.WriteRequest.meta:type_name -> lynkdb.kvapi.v2.Meta
	2,  // 2: lynkdb.kvapi.v2.RequestUnion.write:type_name -> lynkdb.kvapi.v2.WriteRequest
	3,  // 3: lynkdb.kvapi.v2.RequestUnion.delete:type_name -> lynkdb.kvapi.v2.DeleteRequest
	4,  // 4: lynkdb.kvapi.v2.RequestUnion.read:type_name -> lynkdb.kvapi.v2.ReadRequest
	5,  // 5: lynkdb.kvapi.v2.RequestUnion.range:type_name -> lynkdb.kvapi.v2.RangeRequest
	6,  // 6: lynkdb.kvapi.v2.BatchRequest.items:type_name -> lynkdb.kvapi.v2.RequestUnion
	10, // 7: lynkdb.kvapi.v2.BatchResponse.items:type_name -> lynkdb.kvapi.v2.ResultSet
	0,  // 8: lynkdb.kvapi.v2.ResultSet.items:type_name -> lynkdb.kvapi.v2.KeyValue
	16, // 9: lynkdb.kvapi.v2.Database.key_stats:type_name -> lynkdb.kvapi.v2.Database.KeyStat
	17, // 10: lynkdb.kvapi.v2.DatabaseCreateRequest.options:type_name -> lynkdb.kvapi.v2.DatabaseCreateRequest.OptionsEntry
	11, // 11: lynkdb.kvapi.v2.DatabaseListResponse.items:type_name -> lynkdb.kvapi.v2.Database
	2,  // 12: lynkdb.kvapi.v2.Kvgo.Write:input_type -> lynkdb.kvapi.v2.WriteRequest
	3,  // 13: lynkdb.kvapi.v2.Kvgo.Delete:input_type -> lynkdb.kvapi.v2.DeleteRequest
	4,  // 14: lynkdb.kvapi.v2.Kvgo.Read:input_type -> lynkdb.kvapi.v2.ReadRequest
	5,  // 15: lynkdb.kvapi.v2.Kvgo.Range:input_type -> lynkdb.kvapi.v2.RangeRequest
	7,  // 16: lynkdb.kvapi.v2.Kvgo.Batch:input_type -> lynkdb.kvapi.v2.BatchRequest
	10, // 17: lynkdb.kvapi.v2.Kvgo.Write:output_type -> lynkdb.kvapi.v2.ResultSet
	10, // 18: lynkdb.kvapi.v2.Kvgo.Delete:output_type -> lynkdb.kvapi.v2.ResultSet
	10, // 19: lynkdb.kvapi.v2.Kvgo.Read:output_type -> lynkdb.kvapi.v2.ResultSet
	10, // 20: lynkdb.kvapi.v2.Kvgo.Range:output_type -> lynkdb.kvapi.v2.ResultSet
	8,  // 21: lynkdb.kvapi.v2.Kvgo.Batch:output_type -> lynkdb.kvapi.v2.BatchResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_kvapi_proto_init() }
func file_kvapi_proto_init() {
	if File_kvapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kvapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUnion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database_KeyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kvapi_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*RequestUnion_Write)(nil),
		(*RequestUnion_Delete)(nil),
		(*RequestUnion_Read)(nil),
		(*RequestUnion_Range)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kvapi_proto_goTypes,
		DependencyIndexes: file_kvapi_proto_depIdxs,
		MessageInfos:      file_kvapi_proto_msgTypes,
	}.Build()
	File_kvapi_proto = out.File
	file_kvapi_proto_rawDesc = nil
	file_kvapi_proto_goTypes = nil
	file_kvapi_proto_depIdxs = nil
}
